name: Java CI

on:
  push:
  repository_dispatch:
    types: [shared-dto-build]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - run: echo Build for SHA = ${{ github.event.client_payload.sha }}, REF = ${{ github.event.client_payload.ref }}
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.client_payload.ref }}
      - name: Set up JDK 1.15
        uses: actions/setup-java@v1
        with:
          java-version: 1.15
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/jhapy/**
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Build with Maven
        run: mvn -Dmaven.test.skip -s .settings.xml -Dmaven.javadoc.skip -Dossrh_username=${{secrets.ossrh_username}} -Dossrh_password=${{secrets.ossrh_password}} --file pom.xml deploy
      - name: Repository Dispatch App-Base-Server
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.repos_access_token }}
          repository: jhapy/app-base-server
          event-type: shared-commons-build
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
      - name: Repository Dispatch App-Audit-Server
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.repos_access_token }}
          repository: jhapy/app-audit-server
          event-type: shared-commons-build
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
      - name: Repository Dispatch App-Frontend-Application
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.repos_access_token }}
          repository: jhapy/app-frontend-application
          event-type: shared-commons-build
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
      - name: Repository Dispatch App-I18n-Server
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.repos_access_token }}
          repository: jhapy/app-i18n-server
          event-type: shared-commons-build
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
      - name: Repository Dispatch App-Resource-Server
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.repos_access_token }}
          repository: jhapy/app-resource-server
          event-type: shared-commons-build
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
      - name: Repository Dispatch App-Notification-Server
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.repos_access_token }}
          repository: jhapy/app-notification-server
          event-type: shared-commons-build
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
      - name: Repository Dispatch Utils-Registry-Server
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.repos_access_token }}
          repository: jhapy/utils-registry-server
          event-type: shared-commons-build
          client-payload: '{"ref": "${{ github.ref }}", "sha": "${{ github.sha }}"}'
      - name: Slack Success
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          GITHUB_TOKEN: ${{ github.token }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()